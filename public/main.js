/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./controllers/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./controllers/forms/add_task_form.js":
/*!********************************************!*\
  !*** ./controllers/forms/add_task_form.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*jshint esversion: 6 */\r\nconst helpHint = __webpack_require__(/*! ./../hints/help_hint */ \"./controllers/hints/help_hint.js\");\r\nconst setCurlet = __webpack_require__(/*! ./../otherMethods/setCaret */ \"./controllers/otherMethods/setCaret.js\");\r\n\r\n//Variable to remember the user text input\r\nlet textinput;\r\n\r\n//Dummy object with available projects and categories.\r\nconst availables = {\r\n  categories: [\r\n    ['Salud','green'],\r\n    ['Dinero','red'],\r\n    ['Estudiar','black'],\r\n    ['Descansar todo lo que pueda hasta mañana','blue']\r\n  ],\r\n  projects:[\r\n    ['Correr maratón','Salud','green'],\r\n    ['Dormir 8 horas','Descansar','yellow'],\r\n    ['Ahorrar x yenes','Dinero','red']\r\n  ],\r\n  hours:[\r\n    ['0 hours', 1],\r\n    ['1 hours', 2],\r\n    ['2 hours', 3],\r\n    ['3 hours', 4],\r\n    ['4 hours', 5],\r\n    ['5 hours', 6],\r\n    ['6 hours', 7],\r\n    ['7 hours', 8],\r\n    ['8 hours', 9],\r\n    ['9 hours', 10]\r\n  ],\r\n  habitHours:[\r\n    ['Score',0],\r\n    ['0 hours', 1],\r\n    ['1 hours', 2],\r\n    ['2 hours', 3],\r\n    ['3 hours', 4],\r\n    ['4 hours', 5],\r\n    ['5 hours', 6],\r\n    ['6 hours', 7],\r\n    ['7 hours', 8],\r\n    ['8 hours', 9],\r\n    ['9 hours', 10]\r\n  ],\r\n  urgency:[\r\n    ['High','/assets/icon_arrow_up.svg'],\r\n    ['Normal','/assets/icon_arrow_left.svg'],\r\n    ['Low','/assets/icon_arrow_down.svg']\r\n  ],\r\n  learning:[\r\n    ['Learning']\r\n  ]\r\n};\r\n\r\n//Displays modal and loads all necessary functionality\r\nexports.showModal = function(){\r\n\r\n  //Build modal and display\r\n  let modal = buildModal();\r\n  $(document.body).append(modal);\r\n\r\n\r\n  // Displays hint box when hovering elements with hints\r\n  loadHinter();\r\n\r\n  // Focus on task name text date_box\r\n  $('.modal_addTask_body_textBox').focus();\r\n\r\n  //setting jquery ui data picker functionality\r\n  setDatePicker();\r\n\r\n  // close button functionality\r\n  setModalCloser();\r\n\r\n  // swapping task-habit modes\r\n  setTodoTypeButtons();\r\n\r\n  // Set event handlers for option drop down menus\r\n  setDropDownTables();\r\n\r\n  // Set icon button actions\r\n  setIconActions();\r\n};\r\n\r\n// Set icon button actions\r\nfunction setIconActions(){\r\n\r\n  let iconBtn = $('.modal_icon');\r\n  let keyword ='';\r\n  let choice = '';\r\n\r\n  iconBtn.on('click',function(e){\r\n    switch (e.target.id) {\r\n      case 'modal_addTask_categoryIcon':\r\n        keyword='c.';\r\n        choice='categories';\r\n        break;\r\n      case 'modal_addTask_projectIcon':\r\n        keyword='p.';\r\n        choice='projects';\r\n        break;\r\n\r\n      case 'modal_addTask_hoursIcon':\r\n        keyword='h.';\r\n\r\n        if($('#addTask_radio_todo').is(':checked')){\r\n          choice='hours';\r\n        }else{\r\n          choice='habitHours';\r\n        }\r\n        break;\r\n\r\n      case 'modal_addTask_learningIcon':\r\n        keyword='l.';\r\n        choice='learning';\r\n\r\n        //If learning icon actived, deactivate icon.\r\n        let learningIcon = $('#modal_addTask_learningIcon');\r\n        if( learningIcon.parent().attr('data-value') == 'true'){\r\n          learningIcon.parent().attr('data-value','false');\r\n          learningIcon.attr('src','/assets/icon_learning.svg');\r\n          return;}\r\n        break;\r\n\r\n\r\n      case 'modal_addTask_priorityIcon':\r\n        keyword='u.';\r\n        choice='urgency';\r\n        break;\r\n    }\r\n\r\n    let textBox = $('.modal_addTask_body_textBox');\r\n\r\n\r\n    //Removes inserted tag text\r\n    textBox.text(textBox.text().replace(new RegExp(textinput + '$'), ''));\r\n    textBox.text(textBox.text().replace(new RegExp('c\\\\.' + '|' + 'p\\\\.' + '|' + 'l\\\\.' + '|' + 'u\\\\.' + '|' + 'h\\\\.' + '|', 'g'), ''));\r\n    textBox.text(textBox.text().trim());\r\n\r\n\r\n    //Adds the selected icon shorcut to the end of the text box\r\n    if (textBox.text()==\"\"){\r\n      textBox.text(keyword).focus().text(keyword);\r\n    }else{\r\n      textBox.text(textBox.text() + ' ' + keyword);\r\n    }\r\n\r\n    //Get text box node, focus and place the curlet at the end\r\n    textBoxNode = document.getElementsByClassName('modal_addTask_body_textBox')[0];\r\n    setCurlet.setEndOfContenteditable(textBoxNode);\r\n\r\n    textinput=\"\";\r\n\r\n    //Display corresponding menu\r\n    displayDropDownTable(choice);\r\n\r\n    });\r\n}\r\n\r\n// Build add task modal\r\nfunction buildModal(){\r\n  // modal header\r\n  let modalHeader =buildModalHeader();\r\n\r\n  // modal modal\r\n  let modalBody = buildModalBody();\r\n\r\n  // Modal frame\r\n  let modalContent = $('<div>', {\r\n    class: 'modal_addTask_content',\r\n    id:'modal_addTask_content'});\r\n  modalContent.append(modalHeader).append(modalBody);\r\n\r\n  let modal = $('<div>', {\r\n    class: 'modal_addTask',\r\n    id:'modal_addTask'});\r\n  modal.append(modalContent);\r\n\r\n  return modal;\r\n}\r\n\r\n// Builds modal header\r\nfunction buildModalHeader(){\r\n\r\n  // todo and habit radio buttons\r\n  let radioControlGroup = $('<div>',{\r\n    class: 'addTask_radio_container'});\r\n  let radioInputTodo = $('<input>',{\r\n    type: 'radio',\r\n    name: 'addTask_radio',\r\n    id: 'addTask_radio_todo',\r\n    checked: 'checked'});\r\n  let radioLabelTodo = $('<label>',{\r\n    for: 'addTask_radio_todo',\r\n    text: 'Task',\r\n    class: 'radio_label'});\r\n  let radioInputHabit = $('<input>',{\r\n    type: 'radio',\r\n    name: 'addTask_radio',\r\n    id: 'addTask_radio_habit'});\r\n  let radioLabelHabit = $('<label>',{\r\n    for: 'addTask_radio_habit',\r\n    text: 'Habit',\r\n    class: 'radio_label'});\r\n  radioControlGroup\r\n    .append(radioInputTodo)\r\n    .append(radioLabelTodo)\r\n    .append(radioInputHabit)\r\n    .append(radioLabelHabit);\r\n  let modalHeaderTableRadioColumn = $('<td>',{\r\n    class: 'modal_addTask_header_table_radioClm'});\r\n  modalHeaderTableRadioColumn.append(radioControlGroup);\r\n\r\n\r\n  // Modal header middle column\r\n  let captionLeft = $('<div>',{\r\n    class:'modal_addTask_caption_cat'\r\n  });\r\n\r\n  let captionRight = $('<div>',{\r\n    class:'modal_addTask_caption_proj'\r\n  });\r\n\r\n  let modalHeaderTableCaptionColumn = $('<td>',{\r\n    class: 'modal_addTask_header_table_captionClm',\r\n    text: ''});\r\n    modalHeaderTableCaptionColumn.append(captionLeft).append(captionRight);\r\n\r\n  // close button\r\n  let modalHeaderTableCloseColumn = $('<td>',{\r\n    class: 'modal_addTask_header_table_closeClm'});\r\n  let emptyDiv = $('<div>',{});\r\n  let emptySpan = $('<span>',{});\r\n  let closeBtn = $('<img>',{\r\n    class:'modal_addTask_closeBtn',\r\n    src: '/assets/btn_close_modal.svg',\r\n    id: 'modal_addTask_closeBtn'});\r\n  emptySpan.append(closeBtn);\r\n  emptyDiv.append(emptySpan);\r\n  modalHeaderTableCloseColumn.append(emptyDiv);\r\n\r\n\r\n  // compile header\r\n  let modalHeaderTableBody = $('<tbody>',{});\r\n  modalHeaderTableBody\r\n    .append(modalHeaderTableRadioColumn)\r\n    .append(modalHeaderTableCaptionColumn)\r\n    .append(modalHeaderTableCloseColumn);\r\n\r\n    let modalHeaderTable = $('<table>',{\r\n      class: 'modal_addTask_header_table',\r\n      id:'modal_addTask_header_table'});\r\n\r\n    modalHeaderTable.append(modalHeaderTableBody);\r\n    let header = $('<div>', {\r\n      class: 'modal_addTask_header',\r\n      id:'modal_addTask_header'});\r\n    header.append(modalHeaderTable);\r\n\r\n    return header;\r\n}\r\n\r\n// Builds modal modal body\r\nfunction buildModalBody(){\r\n\r\n  //modal body top part\r\n  let text_box_container = $('<div>',{\r\n    class:'modal_addTask_body_textBox',\r\n    tabindex:'1',\r\n    autocomplete:'off',\r\n    contenteditable:'true',\r\n    placeholder:\"Write your task or habit here...\"});\r\n\r\n  let text_box_clm = $('<td>',{\r\n    class:'modal_addTask_body_textBox_col'});\r\n  text_box_clm.append(text_box_container);\r\n\r\n  let date_box_container = $('<input>',{\r\n    type:'text',\r\n    class:'modal_addTask_body_dueDate',\r\n    id: 'modal_addTask_body_dueDate',\r\n    name:'modal_addTask_body_dueDate',\r\n    tabindex:'2',\r\n    autocomplete:'off'});\r\n\r\n  let date_box_clm = $('<td>',{\r\n    class:'modal_addTask_body_dueDate_col'});\r\n  date_box_clm.append(date_box_container);\r\n\r\n  let taskNameTableBodyRow = $('<tr>',{});\r\n  taskNameTableBodyRow.append(text_box_clm).append(date_box_clm);\r\n\r\n  let taskNameTableBody = $('<tbody>',{});\r\n  taskNameTableBody.append(taskNameTableBodyRow);\r\n\r\n  let taskNameTable = $('<table>',{\r\n    class:'modal_addTask_body_taskNameRow_table'});\r\n  taskNameTable.append(taskNameTableBody);\r\n\r\n\r\n  //modal body lower part\r\n  let icon_holder = createIconPackage('task');\r\n\r\n  let add_icons = $('<td>',{\r\n    class:'modal_addTask_body_icons_col'});\r\n  add_icons.append(icon_holder);\r\n\r\n  let submit_Btn = $('<div>',{\r\n    class:'blue_botton',\r\n    id:'modal_addTask_body_submit_btn',\r\n    text: 'Add task'});\r\n\r\n  let add_btn_col = $('<td>',{\r\n    class:'modal_addTask_body_submit_col'});\r\n  add_btn_col.append(submit_Btn);\r\n\r\n  let buttonsTableBodyRow = $('<tr>',{});\r\n  buttonsTableBodyRow.append(add_btn_col).append(add_icons);\r\n\r\n  let buttonsTableBody = $('<tbody>',{});\r\n  buttonsTableBody.append(buttonsTableBodyRow);\r\n\r\n  let buttonsTable = $('<table>',{\r\n    class:'modal_addTask_body_buttonsRow_table'});\r\n  buttonsTable.append(buttonsTableBody);\r\n\r\n  //modal body frame\r\n  let modalBody_manager = $('<div>',{\r\n    class:'modal_addTask_body_manager',\r\n    id:'modal_addTask_body_manager'});\r\n  modalBody_manager.append(taskNameTable).append(buttonsTable);\r\n\r\n  let modalBody_EmptyDiv = $('<div>',{});\r\n  modalBody_EmptyDiv.append(modalBody_manager);\r\n\r\n  let modalBody_iframe = $('<div>',{\r\n    class:'modal_addTask_iframe'});\r\n  modalBody_iframe.append(modalBody_EmptyDiv);\r\n\r\n  let modalBody = $('<div>', {\r\n    class:'modal_addTask_body',\r\n    id:'modal_addTask_body'});\r\n  modalBody.append(modalBody_iframe);\r\n\r\n  return modalBody;\r\n}\r\n\r\n// Displays hint box when hovering elements with hints\r\nfunction loadHinter(){\r\n\r\n  let hintHoldersModal = $('.modal_addTask_body_icons_col .hintHolder');\r\n  const hintBox = $('.hintBox_frame');\r\n\r\n  hintHoldersModal.hover(function(e){\r\n    helpHint.showHint(e,hintBox);\r\n  }, function(e){\r\n    helpHint.hideHint(e,hintBox);\r\n  });\r\n}\r\n\r\n//setting jquery ui data picker functionality\r\nfunction setDatePicker(){\r\n\r\n  //Set jquery ui date picker\r\n  let dueDate_container = $('.modal_addTask_body_dueDate');\r\n  dueDate_container.datepicker({ minDate: 0, maxDate: \"+5Y +10D\" });\r\n  dueDate_container.datepicker( \"option\", \"dateFormat\",\"d M, y\");\r\n\r\n  //Updates dueDate value and style when recognizes a date.\r\n  const dueDateInput = $('#modal_addTask_body_dueDate');\r\n  const today = new Date();\r\n\r\n  dueDateInput.on(\"input\", function(){\r\n    recognizeDate(dueDateInput, today);});\r\n\r\n  dueDateInput.on(\"change\", function(){\r\n      recognizeDate(dueDateInput, today);});\r\n\r\n  //By default set current date (today) to task\r\n  dueDateInput.val('Today');\r\n  dueDateInput.addClass('recognized_dueDate');\r\n}\r\n\r\n// close button functionality\r\nfunction setModalCloser(){\r\n\r\n  let modal = $('.modal_addTask');\r\n\r\n  // closing modal with x button\r\n  $('.modal_addTask_closeBtn').on('click', function(){\r\n    closeModal(modal);\r\n  });\r\n\r\n  // closing modal when clicking outside\r\n  modal.on('click', function(e){\r\n    let notModal = document.getElementById('modal_addTask');\r\n    if(e.target == notModal){\r\n      closeModal(modal);\r\n    }\r\n  });\r\n\r\n  // ESCAPE key pressed\r\n  modal.keydown(function(e) {\r\n    if (e.keyCode == 27) {\r\n        closeModal(modal);\r\n    }\r\n  });\r\n}\r\n\r\n// closes modal and remove all unnecessary DOMS\r\nfunction closeModal(modal){\r\n  modal.remove();\r\n  for (let property in availables){\r\n    if(availables.hasOwnProperty(property)){\r\n      $('#addTask_floater_'+property).remove();\r\n    }\r\n  }\r\n}\r\n\r\n// Applies font/color formatting to duedate item when the\r\n// selected dueDate matches with a recognizable date.\r\n// Also transforms inserted dates into these recognizable strings.\r\nfunction recognizeDate(dueDateInput, today){\r\n  switch(dueDateInput.val()){\r\n    case 'Today':\r\n      dueDateInput.addClass('recognized_dueDate');\r\n      break;\r\n    case 'TMR':\r\n      dueDateInput.addClass('recognized_dueDate');\r\n      break;\r\n    case 'DAT':\r\n      dueDateInput.addClass('recognized_dueDate');\r\n      break;\r\n    case '1 week':\r\n      dueDateInput.addClass('recognized_dueDate');\r\n      break;\r\n    case '2 weeks':\r\n        dueDateInput.addClass('recognized_dueDate');\r\n        break;\r\n    case '1 month':\r\n        dueDateInput.addClass('recognized_dueDate');\r\n        break;\r\n    default:\r\n      dueDateInput.removeClass('recognized_dueDate');\r\n  }\r\n\r\n  const inputDate = new Date(dueDateInput.val());\r\n\r\n  const tomorrow = new Date();\r\n  tomorrow.setDate(tomorrow.getDate()+1);\r\n  const dayAfterTom = new Date();\r\n  dayAfterTom.setDate(dayAfterTom.getDate()+2);\r\n  const oneWeek = new Date();\r\n  oneWeek.setDate(oneWeek.getDate()+7);\r\n  const twoWeeks = new Date();\r\n  twoWeeks.setDate(twoWeeks.getDate()+14);\r\n  const oneMonth = new Date();\r\n  oneMonth.setDate(oneMonth.getDate()+30);\r\n\r\n    switch (inputDate.getDate() + '/' + inputDate.getMonth()) {\r\n      case today.getDate() + '/' + today.getMonth():\r\n          dueDateInput.val('Today');\r\n          dueDateInput.addClass('recognized_dueDate');\r\n          break;\r\n      case tomorrow.getDate() + '/' + tomorrow.getMonth():\r\n        dueDateInput.val('TMR');\r\n        dueDateInput.addClass('recognized_dueDate');\r\n        break;\r\n      case dayAfterTom.getDate() + '/' + dayAfterTom.getMonth():\r\n        dueDateInput.val('DAT');\r\n        dueDateInput.addClass('recognized_dueDate');\r\n        break;\r\n      case oneWeek.getDate() + '/' + oneWeek.getMonth():\r\n        dueDateInput.val('1 week');\r\n        dueDateInput.addClass('recognized_dueDate');\r\n        break;\r\n      case twoWeeks.getDate() + '/' + twoWeeks.getMonth():\r\n        dueDateInput.val('2 weeks');\r\n        dueDateInput.addClass('recognized_dueDate');\r\n        break;\r\n      case oneMonth.getDate() + '/' + oneMonth.getMonth():\r\n        dueDateInput.val('1 month');\r\n        dueDateInput.addClass('recognized_dueDate');\r\n        break;\r\n      default:\r\n    }\r\n\r\n}\r\n\r\n// Fills the modal with the necessary icons depending on the chosen type\r\nfunction createIconPackage(type){\r\n\r\n  //Create icon container\r\n  let iconContainer = $('<span>',{\r\n      class:'modal_addTask_body_icons_iconHolder'});\r\n\r\n  const category_icon = {\r\n    class:'modal_addTask_menuIcon',\r\n    id:'modal_addTask_categoryIcon',\r\n    image:'/assets/icon_category.svg',\r\n    type: 'icon',\r\n    dataValue: ''\r\n  };\r\n\r\n  const project_icon = {\r\n    class:'modal_addTask_menuIcon',\r\n    id:'modal_addTask_projectIcon',\r\n    image:'/assets/icon_project.svg',\r\n    type: 'icon',\r\n    dataValue: ''\r\n  };\r\n\r\n  const priority_icon = {\r\n    class:'modal_addTask_menuIcon',\r\n    id:'modal_addTask_priorityIcon',\r\n    image:'/assets/icon_arrow_left.svg',\r\n    type: 'icon',\r\n    dataValue: 'Normal'\r\n  };\r\n\r\n  const learning_icon = {\r\n    class:'modal_addTask_menuIcon',\r\n    id:'modal_addTask_learningIcon',\r\n    image:'/assets/icon_learning.svg',\r\n    type: 'icon',\r\n    dataValue: 'false'\r\n  };\r\n\r\n  const hours_icon = {\r\n    class:'modal_addTask_menuIcon',\r\n    id:'modal_addTask_hoursIcon',\r\n    image:'/assets/icon_hours.svg',\r\n    type: 'icon',\r\n    dataValue: '0'\r\n  };\r\n\r\nlet icons =  [priority_icon,learning_icon,project_icon,category_icon,hours_icon];\r\n\r\n//If habit, project and learning icons are removed.\r\nif (type == 'habit'){icons = [priority_icon,category_icon,hours_icon];}\r\n\r\nfor (i=0;i<icons.length;i++){\r\n\r\n  let divContainer = $([]);\r\n  let content = $([]);\r\n\r\n  if (icons[i].type == 'icon'){\r\n\r\n    divContainer = $('<div>',{\r\n      class: icons[i].class,\r\n      'data-value':icons[i].dataValue});\r\n\r\n    content = $('<img>',{\r\n      class:'modal_icon hintHolder',\r\n      id: icons[i].id,\r\n      src:icons[i].image});\r\n  }\r\n\r\n  divContainer.append(content);\r\n  iconContainer.append(divContainer);\r\n\r\n  }\r\n\r\n  return iconContainer;\r\n}\r\n\r\n// Adds event handlers to Task/Habit selection buttons.\r\nfunction setTodoTypeButtons(){\r\n\r\n  // Tag controlers\r\n  let projContainer = $('.modal_addTask_caption_proj');\r\n  let catContainer = $('.modal_addTask_caption_cat');\r\n\r\n  let taskBtn = $('#addTask_radio_todo');\r\n  let habitBtn = $('#addTask_radio_habit');\r\n  let iconHolder = $('.modal_addTask_body_icons_iconHolder');\r\n  let iconHolderParent = $('.modal_addTask_body_icons_col');\r\n\r\n  taskBtn.on('click',function(){\r\n    iconHolder.remove();\r\n    iconHolder=createIconPackage('task');\r\n    iconHolderParent.append(iconHolder);\r\n    loadHinter();\r\n    setIconActions();\r\n    projContainer.children().remove();\r\n    catContainer.children().remove();\r\n    $('.modal_addTask_body_textBox').focus();\r\n  });\r\n\r\n  habitBtn.on('click',function(){\r\n    iconHolder.remove();\r\n    iconHolder=createIconPackage('habit');\r\n    iconHolderParent.append(iconHolder);\r\n    loadHinter();\r\n    setIconActions();\r\n    projContainer.children().remove();\r\n    catContainer.children().remove();\r\n    $('.modal_addTask_body_textBox').focus();\r\n  });\r\n\r\n}\r\n\r\n//Builds loaded drop down menu and attatches it to the body\r\nfunction buildDropDownTables(property, active){\r\n\r\n\r\n  // This array will store all the available menu options for this action.\r\n  let optionArray = [];\r\n\r\n  // Function used for filtering options matching input text.\r\n  function takeIfContains(item){\r\n    return item[0].includes(textinput);\r\n  }\r\n\r\n  // If there is no input yet, show all options. If input, show matching options only.\r\n  if (textinput!= \"\" && property!=\"learning\"){\r\n    optionArray = availables[property].filter(takeIfContains);\r\n  }else{\r\n    optionArray = availables[property].slice();\r\n  }\r\n\r\n  // Build tbody\r\n  let optTbody = $('<tbody>',{});\r\n\r\n  // Construct table row for each option in optionArray\r\n  if (optionArray.length>0){\r\n    for (let i=0; i < optionArray.length; i++){\r\n          let optTbRow = constructTableRow(optionArray, property, i);\r\n          optTbody.append(optTbRow);}\r\n\r\n  // If we got an empty array\r\n  }else{\r\n\r\n    let otherOptions = [];\r\n    if (property==\"categories\" || property==\"projects\"){otherOptions.push(['Add new',property]);}\r\n    let optTbRow = constructTableRow(otherOptions, 'new_' + property , 0);\r\n\r\n    if (optTbRow){optTbody.append(optTbRow);}\r\n    else{return null;}\r\n  }\r\n\r\n  // Build option table\r\n  let optTable = $('<table>',{\r\n    id:'addTask_optTb_' + property,\r\n    class:'addTask_optTb'});\r\n  optTable.append(optTbody);\r\n\r\n  // Build inner holder\r\n  let innerHolder = $('<div>',{\r\n    id:'addTask_innerHolder_' + property,\r\n    class:'addTask_innerHolder'});\r\n  innerHolder.append(optTable);\r\n\r\n  //Build base div container\r\n  let outerHolder = $('<div>',{\r\n    id:'addTask_floater_' + property,\r\n    class:'addTask_floater'});\r\n  outerHolder.append(innerHolder);\r\n\r\n  $('#modal_addTask_content').append(outerHolder);\r\n\r\n  //The drop down table receives its position and width from the text box.\r\n  let textBoxFrame = $('.modal_addTask_body_taskNameRow_table');\r\n  let refPos = textBoxFrame.offset();\r\n\r\n  let textBox = $('.modal_addTask_body_textBox');\r\n  let refWidth = textBox[0].parentNode.offsetWidth;\r\n\r\n  //Position and display menu.\r\n  outerHolder.css({top: refPos.top + 36,left: refPos.left,width:refWidth});\r\n  outerHolder.show();\r\n\r\n  return outerHolder;\r\n}\r\n\r\n//Builds each menu table row\r\nfunction constructTableRow(optionArray, property, index){\r\n\r\n  //If we get an empty array because all possible options have been filtered\r\n  //we retun a null object\r\n  if (optionArray.length==0){return null;}\r\n\r\n  let itemIcon = $([]);\r\n\r\n  //Icon changes depending on the property.\r\n  switch (property) {\r\n    case 'categories':\r\n      itemIcon = $('<div>',{\r\n        class:'addTask_tableOption_catIcon'});\r\n      itemIcon.css(\"background-color\",optionArray[index][1]);\r\n      break;\r\n    case 'projects':\r\n      itemIcon = $('<div>',{\r\n        class:'addTask_tableOption_proIcon',\r\n        'data-value':optionArray[index][1]});\r\n      itemIcon.css(\"background-color\",optionArray[index][2]);\r\n      break;\r\n    case 'hours':\r\n      itemIcon = $('<img>',{\r\n        class:'addTask_tableOption_icon',\r\n        'data-value':optionArray[index][1],\r\n        src: '/assets/icon_hours.svg'});\r\n      break;\r\n    case 'habitHours':\r\n      let iconFile = '/assets/icon_hours.svg';\r\n      if(optionArray[index][0]=='Score'){iconFile = '/assets/icon_star.svg';}\r\n      itemIcon = $('<img>',{\r\n        class:'addTask_tableOption_icon',\r\n        'data-value':optionArray[index][1],\r\n        src: iconFile});\r\n      break;\r\n    case 'urgency':\r\n      itemIcon = $('<img>',{\r\n        class:'addTask_tableOption_icon',\r\n        'data-value':optionArray[index][0],\r\n        src: optionArray[index][1]});\r\n      break;\r\n    case 'learning':\r\n      itemIcon = $('<img>',{\r\n        class:'addTask_tableOption_icon',\r\n        'data-value':optionArray[index][0],\r\n        src: '/assets/icon_learning.svg'});\r\n        break;\r\n    case 'new_categories':\r\n    itemIcon = $('<img>',{\r\n      class:'addTask_tableOption_icon',\r\n      'data-value':optionArray[index][1],\r\n      src: '/assets/btn_plus.svg'});\r\n      break;\r\n    case 'new_projects':\r\n    itemIcon = $('<img>',{\r\n      class:'addTask_tableOption_icon',\r\n      'data-value':optionArray[index][1],\r\n      src: '/assets/btn_plus.svg'});\r\n      break;\r\n  }\r\n\r\n  // Row structure\r\n  let leftPart = $('<div>',{\r\n    class:'addTask_tableOption_leftPart'});\r\n  leftPart.append(itemIcon);\r\n\r\n  let rightPart = $('<div>',{\r\n    class:'addTask_tableOption_rightPart',\r\n    text: optionArray[index][0]});\r\n\r\n  let emptyDiv = $('<div>',{});\r\n  emptyDiv.css('display','flex');\r\n  emptyDiv.css('align-items','center');\r\n  emptyDiv.append(leftPart).append(rightPart);\r\n  let optTbCol = $('<td>',{\r\n    class:'addTask_tableOption'});\r\n  optTbCol.append(emptyDiv);\r\n\r\n  let optTbRow = $('<tr>',{\r\n    'data-value':property\r\n  });\r\n  optTbRow.append(optTbCol);\r\n\r\n  return optTbRow;\r\n}\r\n\r\n// Set event handlers for option drop down menus\r\nfunction setDropDownTables(){\r\n\r\n  //On input\r\n  let textBox = $('.modal_addTask_body_textBox');\r\n  textBox.on('input',function(){\r\n\r\n    let text = textBox.text();\r\n    textinput = textBox.text().substr(textBox[0].innerText.lastIndexOf(\".\") + 1);\r\n\r\n      if(text.indexOf('c.') >= 0 && (text.match( RegExp('\\\\.','g')).length)<2){\r\n        displayDropDownTable('categories');\r\n\r\n      }else if(text.indexOf('p.') >= 0 && (text.match( RegExp('\\\\.','g')).length)<2){\r\n        if($('#addTask_radio_todo').is(':checked')){displayDropDownTable('projects');}\r\n\r\n      }else if(text.indexOf('h.') >= 0 && (text.match( RegExp('\\\\.','g')).length)<2){\r\n        if($('#addTask_radio_todo').is(':checked')){\r\n          displayDropDownTable('hours');\r\n        }else{\r\n          displayDropDownTable('habitHours' );}\r\n\r\n      }else if(text.indexOf('u.') >= 0 && (text.match( RegExp('\\\\.','g')).length)<2){\r\n        displayDropDownTable('urgency');\r\n\r\n      }else if(text.indexOf('l.') >= 0 && (text.match( RegExp('\\\\.','g')).length)<2){\r\n        if($('#addTask_radio_todo').is(':checked')){displayDropDownTable('learning');}\r\n\r\n      }else{\r\n          //Reset user input memory\r\n          textinput = \"\";\r\n          hideDropDownTable();\r\n      }\r\n  });\r\n}\r\n\r\n//Hides passed drop down menu and resets table\r\nfunction hideDropDownTable(){\r\n\r\n  //deselect all rows\r\n  $(\".addTask_floater\").remove();\r\n\r\n  //Remove key up-down listener\r\n  $(document).off('keydown');\r\n  $(document).off('keyup');\r\n\r\n  setModalCloser();\r\n\r\n}\r\n\r\n//Displays passed drop down menu and sets necessary event listeners\r\nfunction displayDropDownTable(choice){\r\n\r\n  hideDropDownTable();\r\n\r\n  //Dim text box elements\r\n  let textBox = $('.modal_addTask_body_textBox');\r\n\r\n  //Variable to remember the index of the active row\r\n  let active = 0;\r\n\r\n  //Build corresponding menu\r\n  let menu = buildDropDownTables(choice, active);\r\n\r\n  //If no menu, the following step is skipped.\r\n  if(menu){\r\n\r\n    //Selects first available row as active.\r\n    let rows = menu.find('tr');\r\n    rows[active].classList.add(\"addTask_tableOption_active\");\r\n\r\n    //disable esc key\r\n    let modal = $('.modal_addTask');\r\n    modal.off('keydown');\r\n\r\n\r\n    //Add listener to keydown so we can navigate through the menu\r\n    $(document).keydown(function(e){\r\n\r\n        //If key down - move active down\r\n        if (e.keyCode == 40){\r\n          e.preventDefault();\r\n          rows[active].classList.remove(\"addTask_tableOption_active\");\r\n          if(active<rows.length-1){active++;}else{active=0;}\r\n          rows[active].classList.add(\"addTask_tableOption_active\");\r\n\r\n        //If key up - move active up\r\n        }else if(e.keyCode == 38){\r\n          e.preventDefault();\r\n          rows[active].classList.remove(\"addTask_tableOption_active\");\r\n          if(active>0){active--;}else{active=rows.length-1;}\r\n          rows[active].classList.add(\"addTask_tableOption_active\");\r\n\r\n\r\n        //If tab or ENTER key --- save selection and remove from textbox\r\n        }else if(e.keyCode == 9 || e.keyCode ==13){\r\n\r\n          e.preventDefault();\r\n\r\n          let currentMenu = rows[active].getAttribute('data-value');\r\n          let currentOption = rows[active].children[0].children[0].children[1].textContent;\r\n          let currentInput =  textinput;\r\n\r\n          //Remove tags\r\n          textBox.text(textBox.text().replace(new RegExp(textinput + '$'), ''));\r\n          textBox.text(textBox.text().replace(new RegExp('c\\\\.' + '|' + 'p\\\\.' + '|' + 'l\\\\.' + '|' + 'u\\\\.' + '|' + 'h\\\\.' + '|', 'g'), ''));\r\n          textBox.text(textBox.text().trim());\r\n\r\n\r\n          // Place curlet at the end\r\n          textBoxNode = document.getElementsByClassName('modal_addTask_body_textBox')[0];\r\n          setCurlet.setEndOfContenteditable(textBoxNode);\r\n\r\n\r\n          // Close modal and reset\r\n          textinput = \"\";\r\n          hideDropDownTable();\r\n          modal.keydown(function(e) {\r\n            if (e.keyCode == 27) {\r\n                closeModal(modal);\r\n            }\r\n          });\r\n\r\n          // Categories are stored in the project row icons.\r\n          let linkedCategory='';\r\n          if (currentMenu == 'projects'){\r\n            linkedCategory = rows[active].children[0].children[0].children[0].children[0].getAttribute('data-value');\r\n          }\r\n\r\n\r\n          //If category or project, and not New, retrieves color\r\n          let currentColor = \"\";\r\n          if (currentMenu == 'categories' || currentMenu == 'projects'){\r\n            currentColor= rows[active].children[0].children[0].children[0].children[0].style.backgroundColor;\r\n\r\n          }\r\n\r\n          // Saves menu selection input\r\n          saveMenuSelection(currentMenu,currentOption,currentInput, currentColor, linkedCategory);\r\n\r\n\r\n\r\n        //If escape or SPACE key - close and reset table menu\r\n        }else if(e.keyCode == 27){\r\n          //Remove tags\r\n          textBox.text(textBox.text().replace(new RegExp(textinput + '$'), ''));\r\n          textBox.text(textBox.text().replace(new RegExp('c\\\\.' + '|' + 'p\\\\.' + '|' + 'l\\\\.' + '|' + 'u\\\\.' + '|' + 'h\\\\.' + '|', 'g'), ''));\r\n          textBox.text(textBox.text().trim());\r\n\r\n          //Place curlet at the end\r\n          textBoxNode = document.getElementsByClassName('modal_addTask_body_textBox')[0];\r\n          setCurlet.setEndOfContenteditable(textBoxNode);\r\n\r\n          //close modal and reset\r\n          textinput = \"\";\r\n          hideDropDownTable();\r\n          modal.keydown(function(e) {\r\n            if (e.keyCode == 27) {\r\n                closeModal(modal);\r\n            }\r\n          });\r\n        }\r\n\r\n    });\r\n\r\n    //Saves the introduced string after the dot.\r\n    // $(document).keyup(function(e){\r\n    //\r\n    // });\r\n\r\n\r\n    $('.addTask_optTb tr').mouseover(function(e){\r\n      rows[active].classList.remove(\"addTask_tableOption_active\");\r\n      active =$(this).index();\r\n      rows[active].classList.add(\"addTask_tableOption_active\");\r\n    });\r\n\r\n    $('.addTask_optTb tr').on('click',function(){\r\n\r\n      let currentMenu = rows[active].getAttribute('data-value');\r\n      let currentOption = rows[active].children[0].children[0].children[1].textContent;\r\n      let currentInput =  textinput;\r\n\r\n      //Remove tags\r\n      textBox.text(textBox.text().replace(new RegExp(textinput + '$'), ''));\r\n      textBox.text(textBox.text().replace(new RegExp('c\\\\.' + '|' + 'p\\\\.' + '|' + 'l\\\\.' + '|' + 'u\\\\.' + '|' + 'h\\\\.' + '|', 'g'), ''));\r\n      textBox.text(textBox.text().trim());\r\n\r\n\r\n      // Place curlet at the end\r\n      textBoxNode = document.getElementsByClassName('modal_addTask_body_textBox')[0];\r\n      setCurlet.setEndOfContenteditable(textBoxNode);\r\n\r\n\r\n      // Close modal and reset\r\n      textinput = \"\";\r\n      hideDropDownTable();\r\n      modal.keydown(function(e) {\r\n        if (e.keyCode == 27) {\r\n            closeModal(modal);\r\n        }\r\n      });\r\n\r\n      // Categories are stored in the project row icons.\r\n      let linkedCategory='';\r\n      if (currentMenu == 'projects'){\r\n        linkedCategory = rows[active].children[0].children[0].children[0].children[0].getAttribute('data-value');\r\n      }\r\n\r\n      //If category or project, and not New, retrieves color\r\n      let currentColor = \"\";\r\n      if (currentMenu == 'categories' || currentMenu == 'projects'){\r\n        currentColor= rows[active].children[0].children[0].children[0].children[0].style.backgroundColor;\r\n      }\r\n\r\n      // Saves menu selection input\r\n      saveMenuSelection(currentMenu,currentOption,currentInput, currentColor,linkedCategory);\r\n\r\n    });\r\n }\r\n}\r\n\r\n// Registers user menu selection and saves it.\r\n// Different mechanics depending on the type of selection.\r\nfunction saveMenuSelection(currentMenu,currentOption,currentInput, currentColor, linkedCategory){\r\n\r\n  switch (currentMenu) {\r\n\r\n    //If learning, highlights the learning icon and changes\r\n    //its parent's data value to true.\r\n    case 'learning':\r\n    let learningNode = $('#modal_addTask_learningIcon');\r\n    learningNode.parent().attr('data-value', 'true');\r\n    learningNode.attr('src','/assets/icon_learning_active.svg');\r\n      break;\r\n\r\n    //Change icon parent's data value to current selection.\r\n    //If hight or low urgency, changes icon.\r\n    case 'urgency':\r\n    let urgencyNode = $('#modal_addTask_priorityIcon');\r\n    urgencyNode.parent().attr('data-value', currentOption);\r\n\r\n    if (currentOption=='High'){urgencyNode.attr('src','/assets/icon_arrow_up.svg');}\r\n    if (currentOption=='Low'){urgencyNode.attr('src','/assets/icon_arrow_down.svg');}\r\n    if (currentOption=='Normal'){urgencyNode.attr('src','/assets/icon_arrow_left.svg');}\r\n      break;\r\n\r\n    //Change icon parent's data value to current selection.\r\n    //If more than 0, changes icon.\r\n    case 'hours':\r\n    let hoursNode = $('#modal_addTask_hoursIcon');\r\n    let hours = Number(currentOption.charAt(0));\r\n    hoursNode.parent().attr('data-value', hours);\r\n    if(hours>0){hoursNode.attr('src','/assets/number ' + hours + '.svg');}\r\n    else{hoursNode.attr('src','/assets/icon_hours.svg');}\r\n      break;\r\n\r\n\r\n    //Change icon parent's data value to current selection.\r\n    //If more than 0, changes icon.\r\n    case 'habitHours':\r\n    let habitHoursNode = $('#modal_addTask_hoursIcon');\r\n\r\n    if (currentOption=='Score'){\r\n      habitHoursNode.parent().attr('data-value', 'Score');\r\n      habitHoursNode.attr('src','/assets/icon_star_active.svg');\r\n    }else{\r\n      let hours = Number(currentOption.charAt(0));\r\n      habitHoursNode.parent().attr('data-value', hours);\r\n      if(hours>0){habitHoursNode.attr('src','/assets/number ' + hours + '.svg');}\r\n      else{habitHoursNode.attr('src','/assets/icon_hours.svg');}\r\n    }\r\n      break;\r\n\r\n    case 'categories':\r\n    case 'new_categories':\r\n\r\n    let finalCat = (currentOption == 'Add new') ? currentInput : currentOption;\r\n    let categoryNode = $('#modal_addTask_categoryIcon');\r\n\r\n    categoryNode.parent().attr('data-value',finalCat);\r\n    categoryNode.attr('src','/assets/icon_category_active.svg');\r\n\r\n    //Get color if is existing category. Else dark blue.\r\n    let catColor = (currentColor!='') ? currentColor : '#263e65';\r\n    saveCategory(finalCat, catColor);\r\n      break;\r\n\r\n    case 'projects':\r\n    case 'new_projects':\r\n\r\n    let finalProj = (currentOption == 'Add new') ? currentInput : currentOption;\r\n    let projectNode = $('#modal_addTask_projectIcon');\r\n\r\n    projectNode.parent().attr('data-value',finalProj);\r\n    projectNode.attr('src','/assets/icon_project_active.svg');\r\n\r\n    //Get color if is existing project. Else dark blue.\r\n    let projColor = (currentColor!='') ? currentColor : '#263e65';\r\n    saveProject(finalProj, projColor, linkedCategory);\r\n      break;\r\n  }\r\n}\r\n\r\n// Resets project selection and adds project previsualization tag.\r\n// If project has no category, adds default category.\r\n// If existing category is not compatible, replaces category.\r\nfunction saveProject(finalProj, color,linkedCategory){\r\n\r\n  let projContainer = $('.modal_addTask_caption_proj');\r\n\r\n  //Remove existing project\r\n  projContainer.children().remove();\r\n\r\n  //Add project\r\n  let tagBody = $('<a>',{\r\n    class: 'modal_addTask_tagBody',\r\n    text: finalProj\r\n  });\r\n  tagBody.css(\"background-color\",color);\r\n\r\n  let tagIcon = $('<img>',{\r\n    class:'modal_addTask_tagIcon',\r\n    src: '/assets/btn_close_modal_white.svg'\r\n  });\r\n\r\n  let tagButton = $('<a>',{\r\n    class: 'modal_addTask_tagButton',\r\n  });\r\n  tagButton.css(\"background-color\",color);\r\n  tagButton.append(tagIcon);\r\n\r\n  let tag = $('<div>', {\r\n    class: 'modal_addTask_tag',\r\n    'data-value': finalProj\r\n  });\r\n\r\n  tag.append(tagBody).append(tagButton);\r\n  projContainer.append(tag);\r\n\r\n  //Remove existing category\r\n  let catContainer = $('.modal_addTask_caption_cat');\r\n  catContainer.children().remove();\r\n\r\n  //If received empty category, we add the project to \"Other\" category.\r\n  let finalCategory = (linkedCategory!='') ? linkedCategory : 'Other';\r\n\r\n\r\n  // Icon controllers\r\n  let projectNode = $('#modal_addTask_projectIcon');\r\n  let categoryNode = $('#modal_addTask_categoryIcon');\r\n\r\n\r\n  addCategoryTag(finalCategory, color);\r\n\r\n  //Update category icon\r\n  categoryNode.parent().attr('data-value',finalCategory);\r\n  categoryNode.attr('src','/assets/icon_category_active.svg');\r\n\r\n\r\n\r\n  //Add event handler for project close button\r\n  $('.modal_addTask_caption_proj .modal_addTask_tagButton').on('click',function(){\r\n    projContainer.children().remove();\r\n    projectNode.parent().attr('data-value','');\r\n    projectNode.attr('src','/assets/icon_project.svg');\r\n  });\r\n\r\n\r\n  // Add event handler for tag close button.\r\n  // Removes also the project, as a project cannot exists without a category.\r\n  $('.modal_addTask_caption_cat .modal_addTask_tagButton').on('click',function(){\r\n    catContainer.children().remove();\r\n    projContainer.children().remove();\r\n\r\n    projectNode.parent().attr('data-value','');\r\n    projectNode.attr('src','/assets/icon_project.svg');\r\n\r\n    categoryNode.parent().attr('data-value','');\r\n    categoryNode.attr('src','/assets/icon_category.svg');\r\n  });\r\n\r\n}\r\n// Resets category selection and adds category previsualization tag.\r\n// If project is not compatible with category, project gets removed.\r\nfunction saveCategory(finalCat, color){\r\n\r\n  let tagContainer = $('.modal_addTask_caption_cat');\r\n  let projContainer = $('.modal_addTask_caption_proj');\r\n\r\n  // Get value of already registered category (if there is)\r\n  let previousCat = '';\r\n  if (tagContainer.is(':parent')) {\r\n    previousCat = tagContainer.children().text();\r\n  }\r\n\r\n  // Icon controllers\r\n  let projectNode = $('#modal_addTask_projectIcon');\r\n  let categoryNode = $('#modal_addTask_categoryIcon');\r\n\r\n  //If previous category tag is different to the new one,\r\n  //it means the previous project (if there is), must not be\r\n  //compatible with this category and therefore it needs to be removed.\r\n  if (finalCat!=previousCat && previousCat!=''){\r\n    projContainer.children().remove();\r\n    projectNode.parent().attr('data-value','');\r\n    projectNode.attr('src','/assets/icon_project.svg');\r\n  }\r\n\r\n  // Remove existing category\r\n  tagContainer.children().remove();\r\n\r\n  // Add category\r\n  addCategoryTag(finalCat, color);\r\n\r\n  // Add event handler for tag close button.\r\n  // Removes also the project, as a project cannot exists without a category.\r\n  $('.modal_addTask_caption_cat .modal_addTask_tagButton').on('click',function(){\r\n    tagContainer.children().remove();\r\n    projContainer.children().remove();\r\n\r\n    projectNode.parent().attr('data-value','');\r\n    projectNode.attr('src','/assets/icon_project.svg');\r\n\r\n    categoryNode.parent().attr('data-value','');\r\n    categoryNode.attr('src','/assets/icon_category.svg');\r\n  });\r\n}\r\n\r\n// Function to add category to previsualization tag.\r\nfunction addCategoryTag(finalCat, color){\r\n\r\n  let tagContainer = $('.modal_addTask_caption_cat');\r\n\r\n  let tagBody = $('<a>',{\r\n    class: 'modal_addTask_tagBody',\r\n    text: finalCat\r\n  });\r\n  tagBody.css(\"background-color\",color);\r\n\r\n  let tagIcon = $('<img>',{\r\n    class:'modal_addTask_tagIcon',\r\n    src: '/assets/btn_close_modal_white.svg'\r\n  });\r\n\r\n  let tagButton = $('<a>',{\r\n    class: 'modal_addTask_tagButton',\r\n  });\r\n  tagButton.css(\"background-color\",color);\r\n  tagButton.append(tagIcon);\r\n\r\n  let tag = $('<div>', {\r\n    class: 'modal_addTask_tag',\r\n    'data-value': finalCat\r\n  });\r\n\r\n  tag.append(tagBody).append(tagButton);\r\n  tagContainer.append(tag);\r\n\r\n}\r\n\n\n//# sourceURL=webpack:///./controllers/forms/add_task_form.js?");

/***/ }),

/***/ "./controllers/hints/help_hint.js":
/*!****************************************!*\
  !*** ./controllers/hints/help_hint.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*jshint esversion: 6 */\r\n\r\n//Displays a hint next to the target element.\r\nexports.showHint = function(e,hintBox){\r\n\r\n    let hint = hintMatcher(e.target.id);\r\n    let hintContent = $('<div>', {\r\n      class:'hintBoxContent',\r\n      text: hint});\r\n\r\n    let xPosition = calculateXPosition(e.target.x);\r\n    let yPosition = e.target.y + e.target.height;\r\n\r\n    hintBox.append(hintContent);\r\n    hintBox.css('display','block');\r\n    hintBox.css('top', yPosition);\r\n    hintBox.css('left', xPosition);\r\n\r\n};\r\n\r\n\r\n//Hides and resets hint\r\nexports.hideHint = function(e,hintBox){\r\n    $('.hintBoxContent').remove();\r\n    hintBox.css('display','none');};\r\n\r\n\r\n//Calculates x position so the hintbox is never shown out of the screen.\r\nfunction calculateXPosition(targetPosition){\r\n\r\n  let result = targetPosition;\r\n\r\n  //200 is the max width of the hintBox\r\n  if ((targetPosition + 200) > $( window ).width()){\r\n      result = result-((targetPosition + 200) - $( window ).width()-26);\r\n  }else{\r\n      // IMPORTANT: Due to an unknown issue, hint boxes always show up around\r\n      // 120px sepparated from where they should show up.\r\n      // I added this line as my last resource in order to be able to fix the problem.\r\n      result = result-120;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\n\r\n//Finds the corresponding hint message.\r\nfunction hintMatcher(id){\r\n\r\n  switch (id) {\r\n    case 'top_bar_add_btn': return 'Add new tasks and habits. [q]';\r\n    case 'top_bar_stats_btn': return 'See your performance in numbers!';\r\n    case 'top_bar_account_btn': return 'Manage your account like a boss!';\r\n    case 'modal_addTask_categoryIcon': return 'Assing a category to this item [c.]';\r\n    case 'modal_addTask_projectIcon': return 'Include this task inside a project [p.]';\r\n    case 'modal_addTask_priorityIcon': return 'Select the urgency level of this item [u.]';\r\n    case 'modal_addTask_learningIcon': return 'Add this item to your list of learnt things [l.]';\r\n    case 'modal_addTask_hoursIcon': return 'Estimate how many hours this item will take to complete to get more accurate stats later! [h.]';\r\n    default: return 'Error: No hint found';\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack:///./controllers/hints/help_hint.js?");

/***/ }),

/***/ "./controllers/index.js":
/*!******************************!*\
  !*** ./controllers/index.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*jshint esversion: 6 */\r\nconst addTaksForm = __webpack_require__(/*! ./forms/add_task_form */ \"./controllers/forms/add_task_form.js\");\r\nconst leftMenuHandler = __webpack_require__(/*! ./menus/left_menu */ \"./controllers/menus/left_menu.js\");\r\nconst helpHint = __webpack_require__(/*! ./hints/help_hint */ \"./controllers/hints/help_hint.js\");\r\n\r\n//Main task list element\r\nconst ol = document.getElementById('mainList');\r\n\r\n$(document).ready(function(){\r\n\r\n  //Adding new tasks\r\n  $('#formBtn').on('click', function(){\r\n\r\n      var item = $('form input');\r\n      var todo = {item: item.val()};\r\n\r\n      const secondList = $('#mainList');\r\n\r\n      console.log(\"button clicked\");\r\n      console.log(todo);\r\n\r\n      $.ajax({\r\n        type: 'POST',\r\n        url: '/',\r\n        data: todo,\r\n        success: function(data){\r\n\r\n          secondList.append('<li>' + todo.item + '</li>');\r\n          // for (let i = 0; i<data.length;i++){\r\n          //   secondList.append('<li>' + data[i].item + '</li>');\r\n          // }\r\n\r\n          //do something with the data via front-end framework\r\n          //location.reload();\r\n        }\r\n      });\r\n      return false;\r\n  });\r\n\r\n  // $('li').on('click', function(){\r\n  //\r\n  //     console.log($(this));\r\n  //     let item = {item: $(this).text()};\r\n  //\r\n  //     $.ajax({\r\n  //       type: 'POST',\r\n  //       url: '/remove',\r\n  //       data: item,\r\n  //       success: function(item){\r\n  //\r\n  //         console.log(\"listo\");\r\n  //         //do something with the data via front-end framework\r\n  //         // location.reload();\r\n  //       }\r\n  //     });\r\n  // });\r\n\r\n\r\n  ol.addEventListener('slip:beforereorder', function(e){\r\n      if (/demo-no-reorder/.test(e.target.className)) {\r\n          e.preventDefault();\r\n      }\r\n  }, false);\r\n\r\n  ol.addEventListener('slip:swipe', function(e){\r\n    console.log(e.detail.direction);\r\n  },false);\r\n\r\n\r\n  ol.addEventListener('slip:beforeswipe', function(e){\r\n      if (e.target.nodeName == 'INPUT' || /demo-no-swipe/.test(e.target.className)) {\r\n          e.preventDefault();\r\n      }\r\n  }, false);\r\n\r\n  ol.addEventListener('slip:beforewait', function(e){\r\n      if (e.target.className.indexOf('instant') > -1)\r\n      e.preventDefault();\r\n  }, false);\r\n\r\n  ol.addEventListener('slip:afterswipe', function(e){\r\n      e.target.parentNode.removeChild(e.target);\r\n  }, false);\r\n\r\n  ol.addEventListener('slip:reorder', function(e){\r\n      e.target.parentNode.insertBefore(e.target, e.detail.insertBefore);\r\n      return false;\r\n  }, false);\r\n\r\n  new Slip(ol);\r\n\r\n\r\n  //User interface elements\r\n  const leftMenuIcon = $('#top_bar_menu_icon');\r\n  const leftMenu = $(\"#left_menu\");\r\n  const content = $(\"#content\");\r\n\r\n\r\n  // Shows and hides left menu in mobile version.\r\n  leftMenuIcon.on('click', function(){\r\n    if ($( window ).width()<950){\r\n      if(leftMenu.hasClass(\"show_left_menu\")){\r\n        leftMenuHandler.leftMenuHide(leftMenu,content,leftMenuIcon);\r\n      }else{\r\n        leftMenuHandler.leftMenuShow(content,leftMenu,leftMenuIcon);\r\n      }\r\n    }\r\n  });\r\n\r\n\r\n  // Removes mobile left menu when screen is enlarged to PC size.\r\n  $( window ).resize(function() {\r\n   if($( window ).width()>950 &&  leftMenu.hasClass(\"show_left_menu\")){\r\n     leftMenuHandler.leftMenuHide(leftMenu,content,leftMenuIcon);\r\n   }\r\n});\r\n\r\n\r\n  // Displays add task form\r\n  $('#top_bar_add_btn').on('click', function(){\r\n      addTaksForm.showModal();\r\n  });\r\n\r\n\r\n  // Displays hint box when hover elements with hints\r\n  let hintHolders = $('.hintHolder');\r\n  const hintBox = $('.hintBox_frame');\r\n  hintHolders.hover(function(event){\r\n    helpHint.showHint(event,hintBox);\r\n  }, function(event){\r\n    helpHint.hideHint(event,hintBox);\r\n  });\r\n\r\n\r\n  $(document).keydown(function(e){\r\n\r\n    //(q) Opens addtask panel.\r\n    if (e.keyCode == 81){\r\n      e.preventDefault();\r\n      $(document).off('keydown');\r\n      addTaksForm.showModal();\r\n\r\n    }\r\n  });\r\n\r\n\r\n});\r\n\n\n//# sourceURL=webpack:///./controllers/index.js?");

/***/ }),

/***/ "./controllers/menus/left_menu.js":
/*!****************************************!*\
  !*** ./controllers/menus/left_menu.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\r\n// Module in charge of displaying and hidding the different ui menus.\r\n\r\nexports.leftMenuHide = function(leftMenu,content,leftMenuIcon){\r\n  leftMenu.removeClass(\"show_left_menu\");\r\n  content.removeClass(\"grey_content\");\r\n  leftMenuIcon.attr(\"src\", \"/assets/btn_topbar_menuicon.svg\");\r\n};\r\n\r\nexports.leftMenuShow = function(content,leftMenu,leftMenuIcon){\r\n  content.addClass(\"grey_content\");\r\n  leftMenu.addClass(\"show_left_menu\");\r\n  leftMenuIcon.attr(\"src\", \"/assets/btn_top_close_menu.svg\");\r\n};\r\n\n\n//# sourceURL=webpack:///./controllers/menus/left_menu.js?");

/***/ }),

/***/ "./controllers/otherMethods/setCaret.js":
/*!**********************************************!*\
  !*** ./controllers/otherMethods/setCaret.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\r\n// Places the curlet at the end in contend editable elements\r\nexports.setEndOfContenteditable = function setEndOfContenteditable(contentEditableElement)\r\n{\r\n    var range,selection;\r\n    if(document.createRange) //Firefox, Chrome, Opera, Safari, IE 9+\r\n    {\r\n        range = document.createRange(); //Create a range (a range is a like the selection but invisible)\r\n        range.selectNodeContents(contentEditableElement); //Select the entire contents of the element with the range\r\n        range.collapse(false); //collapse the range to the end point. false means collapse to end rather than the start\r\n        selection = window.getSelection();//get the selection object (allows you to change selection)\r\n        selection.removeAllRanges();//remove any selections already made\r\n        selection.addRange(range);//make the range you have just created the visible selection\r\n    }\r\n    else if(document.selection)//IE 8 and lower\r\n    {\r\n        range = document.body.createTextRange();//Create a range (a range is a like the selection but invisible)\r\n        range.moveToElementText(contentEditableElement);//Select the entire contents of the element with the range\r\n        range.collapse(false);//collapse the range to the end point. false means collapse to end rather than the start\r\n        range.select();//Select the range (make it the visible selection\r\n    }\r\n};\r\n\n\n//# sourceURL=webpack:///./controllers/otherMethods/setCaret.js?");

/***/ })

/******/ });